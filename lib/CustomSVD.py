import numpy as np
import pandas as pd
import surprise

from tqdm import tqdm
tqdm.pandas()


class CustomSVD:

    def __init__(self, n_factors=30, biased=True, num_of_preds=2):

        self.cards_features = pd.read_csv('../data/cards.csv')
        self.n_factors = n_factors
        self.biased = biased
        self.number_of_top_cards = 50
        self.num_of_preds = num_of_preds
        self.model = None
        self.sorted_cards_ids = np.array([177, 475124, 475133, 263, 475117, 4, 595, 589, 28, 49, 1024934, 1024957,
                                          475123, 7748, 30, 14445, 1024983, 475126, 475127, 55552, 475128, 220, 475137,
                                          188, 12178, 27216, 1024953, 475143, 42025, 411, 475182, 475000, 12191, 7732,
                                          33155, 1024956, 42048, 12192, 7749, 22358, 14454, 303, 475119, 12230, 475130,
                                          35239, 12200, 12227, 435, 56, 12182, 33178, 12195, 12188, 475165, 49700, 386,
                                          475040, 503, 12300, 12202, 475177, 88, 125, 33, 49692, 475170, 7746, 1024971,
                                          55561, 1024977, 12253, 42049, 475189, 22267, 22299, 55553, 49689, 160, 475176,
                                          33168, 94, 1024975, 49621, 475005, 475184, 309, 475179, 422, 513, 55551,
                                          31114, 434, 33124, 42036, 475022, 641, 60, 368, 475135, 475169, 55489, 33123,
                                          49622, 22343, 1024984, 35196, 1024954, 372, 27211, 55585, 73321, 683, 31112,
                                          241, 35187, 1025001, 55558, 246, 55466, 42, 475161, 475007, 475190, 475019,
                                          31110, 55465, 463, 7753, 14447, 475195, 475115, 659, 221, 545, 475020, 55511,
                                          174, 49637, 495, 89450, 22302, 12214, 388, 22351, 27252, 12252, 49694, 475185,
                                          7737, 62871, 55509, 483, 27239, 7756, 12175, 598, 76932, 1024976, 14437,
                                          52582, 475167, 35184, 33179, 22396, 35244, 264, 95, 22374, 1024982, 49693,
                                          602, 76908, 1024931, 475186, 22259, 22264, 519, 289, 475162, 475173, 22359,
                                          7742, 49704, 14448, 49690, 475198, 474995, 12306, 1024972, 14446, 62897,
                                          475188, 576, 61820, 12189, 42021, 55478, 157, 7757, 414, 49673, 61834, 55559,
                                          597, 389, 89416, 55485, 604, 47, 12193, 67, 674, 42044, 648, 176, 396, 31121,
                                          12246, 12225, 22262, 475174, 22294, 7751, 475, 212, 476, 33134, 475035, 564,
                                          12216, 97, 140, 84, 76897, 12187, 475183, 14451, 89365, 24, 475175, 55563,
                                          475191, 55451, 509, 89426, 22276, 12176, 27, 475197, 1024965, 55488, 33148,
                                          22292, 49734, 1024960, 35201, 475181, 35211, 22353, 475044, 22274, 1024958,
                                          663, 510, 472, 76885, 184, 35254, 12233, 12177, 42039, 14456, 1024968, 14436,
                                          14435, 76942, 625, 325, 475034, 477, 474992, 12266, 474, 12248, 77000, 62895,
                                          572, 7730, 89424, 89861, 475038, 603, 12198, 178, 54, 475163, 560, 475172,
                                          77017, 346, 89916, 61825, 12264, 12281, 42031, 76881, 22289, 49739, 76963,
                                          49626, 89425, 22301, 323, 35212, 22355, 62848, 475141, 22352, 12183, 42022,
                                          7745, 35216, 89836, 1025000, 55, 27254, 89805, 7744, 42029, 62922, 41, 14449,
                                          12290, 634, 89342, 475043, 22290, 19, 55529, 55570, 475164, 7736, 55574,
                                          12261, 12288, 33154, 425, 518, 22378, 12272, 39, 14450, 35202, 76910, 75, 153,
                                          22318, 35219, 173, 138, 22266, 22263, 35240, 33128, 89353, 55584, 273,
                                          1024974, 197, 52595, 33149, 49740, 584, 12250, 76, 12287, 611, 49762, 22326,
                                          22306, 675, 7754, 453, 89427, 35230, 456, 62901, 627, 27219, 245, 55453,
                                          22275, 35190, 14438, 55508, 475168, 474997, 89826, 475031, 61822, 12274,
                                          12249, 15, 55550, 22381, 432, 22390, 57, 27226, 76991, 33130, 55506, 12190,
                                          89336, 14441, 22375, 62899, 265, 14442, 22317, 76960, 89451, 203, 89888,
                                          22366, 22311, 285, 362, 103, 660, 31111, 12239, 35225, 1024979, 7747, 251,
                                          629, 89438, 217, 22369, 76909, 18, 7755, 42062, 33177, 35228, 12258, 89404,
                                          12284, 55532, 89406, 12217, 475003, 35233, 62951, 475011, 89335, 62869, 7758,
                                          27223, 33175, 12199, 339, 474998, 475001, 55515, 22295, 475160, 33173, 12251,
                                          261, 22377, 42060, 62883, 12286, 33157, 27241, 89799, 35243, 1024980, 89367,
                                          42034, 35247, 179, 33152, 33156, 12213, 62931, 89838, 27231, 49723, 55471,
                                          22297, 12196, 55487, 12282, 436, 89835, 89402, 682, 89884, 12263, 62847,
                                          33164, 22298, 89891, 89933, 89386, 42065, 22350, 42030, 475024, 33133, 49625,
                                          31109, 475139, 49624, 49671, 73318, 55468, 22335, 89364, 89347, 49672, 475166,
                                          89366, 35236, 55573, 35223, 49645, 1024962, 89401, 55560, 27233, 55522, 33137,
                                          89896, 89464, 22312, 89915, 22346, 42035, 12247, 77009, 559, 35222, 267,
                                          89801, 35249, 62937, 7750, 35253, 49761, 76895, 27234, 42063, 22296, 89803,
                                          76993, 49701, 55525, 55583, 55590, 49733, 31117, 22291, 62923, 27235, 27245,
                                          89821, 22341, 55567, 22367, 49634, 89871, 55534, 42053, 55593, 49687, 49632,
                                          42055, 89887, 76996, 22308, 77012, 61817, 475192, 58723, 62948, 77007, 49696,
                                          49684, 22372, 475196, 89931, 76986, 89875, 55595, 55521, 49677, 55537, 49743,
                                          22338, 55519, 22322, 55575, 89877, 89463, 49730, 35251, 89381, 49731, 58720,
                                          49756, 89882, 62929, 89857, 89897, 62892, 62855, 35250, 31115, 62849, 22382,
                                          62839, 77020, 55591, 89337, 62844, 49697, 89452, 73325, 49758, 49675, 77014,
                                          49757, 22323, 35248, 62859, 89371, 62943, 89899, 62866, 89399, 77002, 77001,
                                          12268, 76884, 76917, 49738, 89824, 89922, 62933, 89334, 35200, 49710, 49686,
                                          76964, 62938, 49659, 89889, 62920, 77003, 61832, 55568, 35229, 89813, 89455,
                                          62888, 475032, 77018, 89357, 76912, 76990, 89842, 62850, 62919, 55586, 475180,
                                          77006, 22314, 62946, 76973, 475187, 77011, 89929, 89910, 77015, 49658, 89474,
                                          76879, 89466, 49737, 62954, 22260, 89453, 89444, 49759, 89926, 49647, 49760,
                                          49688, 35203, 77019, 76864, 49670, 35238, 89476, 89946, 61816, 89467, 89470,
                                          77013, 76983, 62902, 62863, 33138, 62941, 62950, 89852, 62953, 49712, 89935,
                                          89400, 89415, 475194, 89459, 49639, 89850, 89339, 49728, 62944, 61811, 76999,
                                          76992, 89883, 89945, 73323, 55556, 89940, 89477, 77016, 89809, 89919, 89442,
                                          89449, 76934, 62893, 89925, 62858, 89462, 89478, 89472, 89905, 89909, 89419,
                                          622, 89412, 650, 89927, 89932, 89456, 76985, 62949, 141, 89944, 89928, 89936,
                                          62924, ])
        self.legendary_cards_ids = np.array([90145, 31110, 474, 33177, 22325, 90764, 378800,
                                             90190, 90792, 774144, 89877, 1108024, 90609, 33134,
                                             89370, 49628, 904874, 22342, 33168, 33156, 474989,
                                             22324, 27254, 89335, 22338, 475085, 49744, 14456,
                                             49756, 378803, 90624, 55520, 378802, 378801, 303,
                                             76960, 151349, 61828, 1024949, 55501, 12294, 241,
                                             76983, 12196, 14448, 285, 432, 90171, 127287,
                                             127264, 90220, 90621, 127293, 12217, 1004141, 474986,
                                             55468, 89437, 33173, 495, 463939, 475058, 35230,
                                             90234, 90614, 474979, 14451, 90240, 90602, 76929,
                                             90150, 90595, 76873, 7742, 73318, 475159, 90826,
                                             90209, 503, 1024989, 22343, 475129, 18, 90159,
                                             55473, 904864, 76895, 90566, 42036, 487632, 1024950,
                                             62898, 89405, 33138, 62922, 475033, 614784, 22393,
                                             220, 89334, 89374, 61822, 12187, 329913, 151357,
                                             62856, 90546, 474992, 89848, 90545, 33170, 22368,
                                             89415, 90720, 12182, 22313, 12290, 90237, 90176,
                                             90169, 22353, 1004133, 49683, 12232, 151377, 31117,
                                             1025325, 49693, 329918, 210732, 89359, 76920, 35207,
                                             228, 14438, 368689, 22260, 90554, 42022, 12293,
                                             738192, 562746, 12292, 151320, 90789, 329931, 55454,
                                             90562, 76893, 1024964, 1004192, 12272, 35201, 151344,
                                             90718, 49706, 90593, 614806, 22346, 474995, 329942,
                                             251, 89336, 90569, 33127, 474994, 39, 12295,
                                             89890, 14454, 151342, 12287, 89352, 76891, 55508,
                                             210656, 1024993, 89375, 7747, 62845, 151361, 22276,
                                             562747, 615055, 49684, 12282, 90250, 33149, 90557,
                                             90719, 73326, 388956, 33, 396, 210727, 22314,
                                             388974, 1024971, 55462, 179, 22349, 89406, 12225,
                                             12291, 151332, 49731, 203, 89863, 90741, 487636,
                                             22288, 210713, 90622, 42021, 12183, 61814, 12244,
                                             267, 61831, 89402, 1024963, 682, 7745, 89385,
                                             55451, 442035, 49632, 90285, 602, 329917, 90189,
                                             388955, 33131, 12268, 76947, 674, 388950, 1025002,
                                             127294, 12190, 442044, 49682, 7746, 89865, 463942,
                                             42031, 35188, 1004187, 388940, 22264, 89443, 49702,
                                             463925, 7744, 89889, 474996, 614779, 329909, 127292,
                                             12296, 49726, 89803, 500129, 90615, 474997, 463927,
                                             1004132, 62923, 984492, 487645, 1024976, 127271, 1024986,
                                             89812, 49737, 22323, 151364, 90213, 329941, 1024990,
                                             1024966, 89909, 90760, 210686, 62872, 49622, 329907,
                                             210742, 774178, 217, 62844, 61819, 487696, 90646,
                                             55457, 184662, 55522, 89411, 76986, 378844, 487661,
                                             55556, 90835, 90193, 487676, 329891, 210728, 210677,
                                             49659, 89813, 33139, 1024975, 474999, 151321, 90606,
                                             3, 22295, 89345, 22296, 22389, 89804, 388960,
                                             90199, 474998, 329943, 210683, 90560, 151368, 463924,
                                             42030, 329935, 61816, 49657, 774160, 49728, 329873,
                                             90680, 329939, 89805, 210667, 76907, 245, 90223,
                                             49633, 210730, 89424, 210717, 90174, 1024980, 475000,
                                             55464, 89860, 487662, 210811, 90568, 49729, 90585,
                                             339, 210779, 19, 456, 35248, 58723, 52582,
                                             487698, 210715, 90722, 388954, 463930, 90825, 89377,
                                             774138, 49624, 210805, 983954, 35190, 1024974, 89856,
                                             89840, 89818, 89918, 89888, 210804, 89892, 89802,
                                             90796, 52588, 90701, 90798, 89898, 210741, 55523,
                                             90724, 55538, 55447, 55551, 90705, 90697, 55481,
                                             55497, 89881, 90813, 90698, 55512, 55470, 76869,
                                             73321, 76949, 388953, 76975, 76976, 76930, 151352,
                                             76878, 73322, 76967, 329906])

        self.train_dataset = None
        self.top_n_cards = self.sorted_cards_ids[:self.number_of_top_cards]

    def fit(self, train_dataset):

        """
        :param train_dataset: |user_id|card_id|rate|
        """
        train_dataset.columns = ['n_users', 'n_items', 'rating']
        self.train_dataset = train_dataset

        # set rating scale
        reader = surprise.Reader(rating_scale=(1, 2))

        # transform to surprize dataset
        ds = surprise.Dataset.load_from_df(train_dataset, reader)

        # set model config
        funkSVD = surprise.prediction_algorithms.matrix_factorization.SVD(n_factors=self.n_factors, biased=self.biased)

        # train model
        train = ds.build_full_trainset()
        funkSVD.fit(train)

        self.model = funkSVD

        return self

    def predict(self, deck, user_name='0000000a-00a0-00aa-aaa0-00aaa0a00aa0'):
        """
        :param deck: [card_id, card_id, card_id, card_id, ...]
        :return:
        """

        if len(deck) >= 30:
            raise AttributeError('Deck is already full')

        # ban cards
        banned_cards = []
        values, counts = np.unique(deck, return_counts=True)

        # if 3 in counts:
        #     raise AttributeError("ERRRR")

        for card_id, card_count in zip(values, counts):

            # max copies of plain cards
            if card_count == 2:
                banned_cards.append(card_id)

            # legendary cards must not be duplicated
            if card_id in self.legendary_cards_ids:
                banned_cards.append(card_id)

        # get id's to predict
        list_to_predict = []
        for card_id in self.top_n_cards:
            if card_id not in banned_cards:
                list_to_predict.append([user_name, card_id, None])

        # preds
        preds = self.model.test(list_to_predict)
        df_preds = pd.DataFrame([[x.iid, x.est] for x in preds], columns=['card', 'rate'])
        df_preds.sort_values(by='rate', ascending=False, inplace=True)

        return df_preds.iloc[:self.num_of_preds]
